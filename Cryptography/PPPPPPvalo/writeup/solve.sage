from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
n=172588960922533123798067001212071464482941751375438846613387190600028806970239381312384077881081568929691345893607740179255135301617048665499435417093332652872847603958760248623399135066779606752828423539652710279258275482059852392507036065428726607766739460924362628376818248415328521993485313287055700508747
invp=13293542788056510341806197024737143098983365959765212143891239752019709461053372119467234128207773763135807817064220302902170363645403622090490983980159700
invq =71553773775753799549635273091548666603526221704103259089909700553024645791504699640976702747743595537016826339500468744952049305607934156556212668428296
ct=b'\xc3w\xae\x10\n\xc0\xe0\xcd92(\x89\x921\xe3\xe3\xb8\\\xe63\x1f{\xd2>y\xd8s\xdf\xb8b\x01i\xcd4\x12\xa1\xb5|\xb6\x11\xd5k\xc1\x81d\xdc\xd7\xc0r\xe9\xf61\xbb\xfe\xd8\xfa\x87\x05\x06z\x0c\xcc\xf9\x82L\x85o\x05\xaa\xe38r\t\xa5?H\x841M\xff\xa8G\xadP\x07\x01Z\x1a\xd9,`\x1aZ\xc6\xe0\x8d\xa1@}jQ\xcd?V\xc5+\x05\xdf7\x1b,614\x90%DjV)\x0eG\x1c\xc7fAC\xa0'

# pinv * qinv * n = n * k * j + k * p + j * q + 1
# we know gcd(kj, pq) = 1 cause k < q and j < p
# we also find that kp + jq < 2n - 2, thus kp + jq = n - 1 
kj = invp * invq - 1
# n = pq
# num = kj
# kp + jq = n - 1
# n*num / (jq) + jq = n-1
# jq^2 - (n-1) jq + n * num = 0
jq = ((n-1) + ((n-1)^2 - 4*n*kj)^(1/2)) // 2
q = GCD(jq, n)
p = n // q
d = power_mod(0x10001, -1, (p-1) * (q-1))
key = RSA.construct((int(n), int(0x10001), int(d)))
cipher = PKCS1_OAEP.new(key)
print(cipher.decrypt(ct))