from sage.all import *

P = [117, 69, 133, 180, 42, 160, 65, 166, 35, 46, 5, 128, 20, 157, 60, 161, 63, 95, 152, 80, 83, 73, 108, 106, 187, 119, 109, 51, 50, 28, 79, 102, 4, 184, 132, 169, 61, 130, 134, 14, 185, 78, 77, 87, 6, 88, 52, 182, 67, 145, 112, 31, 37, 178, 135, 74, 100, 30, 124, 68, 151, 55, 171, 72, 173, 183, 167, 148, 168, 104, 56, 19, 36, 82, 49, 190, 29, 32, 1, 142, 25, 177, 18, 136, 71, 11, 16, 91, 147, 84, 27, 57, 44, 90, 131, 122, 139, 127, 24, 76, 97, 126, 86, 81, 34, 159, 41, 115, 101, 176, 58, 47, 48, 140, 98, 181, 105, 144, 64, 39, 96, 138, 153, 186, 22, 45, 62, 174, 154, 155, 33, 188, 70, 92, 158, 8, 118, 89, 123, 141, 10, 189, 120, 12, 170, 75, 162, 125, 163, 93, 99, 113, 137, 7, 43, 156, 26, 21, 191, 59, 175, 13, 121, 149, 150, 66, 9, 111, 107, 103, 53, 164, 2, 110, 85, 17, 116, 23, 38, 146, 143, 114, 165, 3, 179, 54, 172, 15, 40, 129, 94]
Cipher = 'tul0d79eeibf10{3teg51d92n3f8_baf323rpear5w_c0116Pebfhe8si9_d28088d_e78o72ac9cdbbaeg5e5a9bar808fe32ec4f1_5m6td__5697o8Cdr}6n2bun033id37t6a35734c8ef_086T9d2b8af5if77d69634rp0ae7oeo_4r7b3c1co9_P'
n = len(P)
V = Permutations(n)
P = V(P)
e = next_prime(n)
order = factorial(n)
d = inverse_mod(e, order)
G = P ** d

print(G ** e == P)

Cipher = Cipher.encode()

flag = [0 for i in range(n)]
for i in range(n):
    flag[G[i] - 1] = Cipher[i]

print(bytes(flag))